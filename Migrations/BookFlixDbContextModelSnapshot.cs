// <auto-generated />
using System;
using BookFlix.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BookFlix.API.Migrations
{
    [DbContext(typeof(BookFlixDbContext))]
    partial class BookFlixDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BookFlix.API.Models.Domain.Book", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<Guid>("RatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("RatingId");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("BookFlix.API.Models.Domain.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bc54bb0c-1d77-48c2-95ea-fd55f691db4c"),
                            Title = "Fiction"
                        },
                        new
                        {
                            Id = new Guid("17ea39ed-3066-44f6-a0c1-d97be6b15de9"),
                            Title = "Literature"
                        },
                        new
                        {
                            Id = new Guid("f0e0164e-a932-4a8b-ba41-291df0d439d5"),
                            Title = "Technology"
                        },
                        new
                        {
                            Id = new Guid("3edb015b-ec4e-45df-8390-b9c66281ab3f"),
                            Title = "History"
                        },
                        new
                        {
                            Id = new Guid("2fa56e3d-d9fb-4453-824a-9094580e5d52"),
                            Title = "Finance"
                        });
                });

            modelBuilder.Entity("BookFlix.API.Models.Domain.Image", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FileDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileExtension")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("FileSizeInBytes")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("BookFlix.API.Models.Domain.Rating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("RatingValue")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Ratings");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a3c7d69e-0c07-47db-a0fe-f7eb6160f568"),
                            RatingValue = 1
                        },
                        new
                        {
                            Id = new Guid("4bb3890e-2acc-4ebe-9e5f-e0527b4b33cb"),
                            RatingValue = 2
                        },
                        new
                        {
                            Id = new Guid("91f9aee4-d7d3-4ea1-b4ba-e6c11c37efe3"),
                            RatingValue = 3
                        },
                        new
                        {
                            Id = new Guid("7a500d61-2f35-423e-a1e1-e6b58f6c0253"),
                            RatingValue = 4
                        },
                        new
                        {
                            Id = new Guid("1003b2e0-fbee-4a48-86c8-209917e9fa69"),
                            RatingValue = 5
                        });
                });

            modelBuilder.Entity("BookFlix.API.Models.Domain.Book", b =>
                {
                    b.HasOne("BookFlix.API.Models.Domain.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookFlix.API.Models.Domain.Rating", "Rating")
                        .WithMany()
                        .HasForeignKey("RatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Rating");
                });
#pragma warning restore 612, 618
        }
    }
}
